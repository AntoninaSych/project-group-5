{"version":3,"file":"commonHelpers.js","sources":["../src/js/mobile-menu.js","../src/js/animation.js","../src/js/scroll.js"],"sourcesContent":["(() => {\n    const mobileMenu = document.querySelector('.js-menu-container')\n    const openMenuBtn = document.querySelector('.js-open-menu')\n    const closeMenuBtn = document.querySelector('.js-close-menu')\n    const menuLinks = document.querySelectorAll('.menu-link')\n\n    const toggleMenu = () => {\n        const isMenuOpen = openMenuBtn.getAttribute('aria-expanded') === 'true' || false\n        openMenuBtn.setAttribute('aria-expanded', !isMenuOpen)\n        mobileMenu.classList.toggle('is-open')\n    }\n\n    openMenuBtn.addEventListener('click', toggleMenu)\n    closeMenuBtn.addEventListener('click', toggleMenu)\n    menuLinks.forEach(menuLink => {\n      menuLink.addEventListener('click', toggleMenu)\n    })\n\n    // Close the mobile menu on wider screens if the device orientation changes\n    window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n        if (!e.matches) {\n          return\n        }\n        mobileMenu.classList.remove('is-open')\n        openMenuBtn.setAttribute('aria-expanded', false)\n    });\n})();\n\n","window.addEventListener('load', function() {\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach(entry => {\n      if (entry.isIntersecting) {\n        entry.target.classList.add('animation')\n      } else {\n        entry.target.classList.remove('animation')\n      }\n    })\n  }, {\n    threshold: [0.3] // threshold: if 30% of the element is in the screen, we count it!\n  })\n\n  // list of elements to add animation class if they are in viewport\n  const listElements = ['.proposal__box']\n\n  // go through to add animation class in they are in viewport\n  listElements.forEach(selector => {\n    const element = document.querySelector(selector)\n\n    if (element) {\n      observer.observe(element)\n    }\n  })\n})\n","window.addEventListener('load', function() {\n  const topElement = document.getElementById(\"header\")\n  const upButton = document.getElementById(\"up\")\n\n  upButton.onclick = () => {\n    topElement.scrollIntoView({\n      behavior: 'smooth',\n    })\n  }\n\n  window.addEventListener(\"scroll\", function() {\n    const offsetTop = this.scrollY;\n\n    if (offsetTop > 350) {\n      upButton.classList.add('visible')\n    } else {\n      upButton.classList.remove('visible')\n    }\n  })\n})\n"],"names":["mobileMenu","openMenuBtn","closeMenuBtn","menuLinks","toggleMenu","isMenuOpen","menuLink","e","observer","entries","entry","selector","element","topElement","upButton"],"mappings":"usBAAC,IAAM,CACH,MAAMA,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAe,SAAS,cAAc,gBAAgB,EACtDC,EAAY,SAAS,iBAAiB,YAAY,EAElDC,EAAa,IAAM,CACrB,MAAMC,EAAaJ,EAAY,aAAa,eAAe,IAAM,QAAU,GAC3EA,EAAY,aAAa,gBAAiB,CAACI,CAAU,EACrDL,EAAW,UAAU,OAAO,SAAS,CACxC,EAEDC,EAAY,iBAAiB,QAASG,CAAU,EAChDF,EAAa,iBAAiB,QAASE,CAAU,EACjDD,EAAU,QAAQG,GAAY,CAC5BA,EAAS,iBAAiB,QAASF,CAAU,CACnD,CAAK,EAGD,OAAO,WAAW,oBAAoB,EAAE,iBAAiB,SAAUG,GAAK,CAC/DA,EAAE,UAGPP,EAAW,UAAU,OAAO,SAAS,EACrCC,EAAY,aAAa,gBAAiB,EAAK,EACvD,CAAK,CACL,GAAI,EC1BJ,OAAO,iBAAiB,OAAQ,UAAW,CACzC,MAAMO,EAAW,IAAI,qBAAsBC,GAAY,CACrDA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,eACRA,EAAM,OAAO,UAAU,IAAI,WAAW,EAEtCA,EAAM,OAAO,UAAU,OAAO,WAAW,CAEjD,CAAK,CACL,EAAK,CACD,UAAW,CAAC,EAAG,CACnB,CAAG,EAGoB,CAAC,gBAAgB,EAGzB,QAAQC,GAAY,CAC/B,MAAMC,EAAU,SAAS,cAAcD,CAAQ,EAE3CC,GACFJ,EAAS,QAAQI,CAAO,CAE9B,CAAG,CACH,CAAC,ECxBD,OAAO,iBAAiB,OAAQ,UAAW,CACzC,MAAMC,EAAa,SAAS,eAAe,QAAQ,EAC7CC,EAAW,SAAS,eAAe,IAAI,EAE7CA,EAAS,QAAU,IAAM,CACvBD,EAAW,eAAe,CACxB,SAAU,QAChB,CAAK,CACF,EAED,OAAO,iBAAiB,SAAU,UAAW,CACzB,KAAK,QAEP,IACdC,EAAS,UAAU,IAAI,SAAS,EAEhCA,EAAS,UAAU,OAAO,SAAS,CAEzC,CAAG,CACH,CAAC"}