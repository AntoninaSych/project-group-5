{"version":3,"file":"commonHelpers.js","sources":["../src/js/mobile-menu.js","../src/js/animation.js","../src/js/scroll.js"],"sourcesContent":["(() => {\n    const mobileMenu = document.querySelector('.js-menu-container');\n    const openMenuBtn = document.querySelector('.js-open-menu');\n    const closeMenuBtn = document.querySelector('.js-close-menu');\n\n    const toggleMenu = () => {\n        const isMenuOpen =\n            openMenuBtn.getAttribute('aria-expanded') === 'true' || false;\n        openMenuBtn.setAttribute('aria-expanded', !isMenuOpen);\n        mobileMenu.classList.toggle('is-open');\n\n        const scrollLockMethod = !isMenuOpen\n            ? 'disableBodyScroll'\n            : 'enableBodyScroll';\n        // bodyScrollLock[scrollLockMethod](document.body);\n    };\n\n    openMenuBtn.addEventListener('click', toggleMenu);\n    closeMenuBtn.addEventListener('click', toggleMenu);\n\n    // Close the mobile menu on wider screens if the device orientation changes\n    window.matchMedia('(min-width: 768px)').addEventListener('change', e => {\n        if (!e.matches) return;\n        mobileMenu.classList.remove('is-open');\n        openMenuBtn.setAttribute('aria-expanded', false);\n        // bodyScrollLock.enableBodyScroll(document.body);\n    });\n})();\n\n","const IntersectionObserverCallback = (entries) => {\n  entries.forEach(entry => {\n    if (entry.isIntersecting) {\n      entry.target.classList.add('animation')\n    } else {\n      entry.target.classList.remove('animation')\n    }\n  })\n}\n\n// threshold: if 20% of the element is in the screen, we count it!\n// Can change the thresholds based on your needs. The default is 0 - it'll run only when the element first comes into view\nconst observer = new IntersectionObserver(IntersectionObserverCallback, {\n  threshold: [0.2]\n})\n\nwindow.onload = () => {\n  // list of elements to add animation class if they are in viewport\n  ['.proposal__box'].forEach(selector => {\n    const element = document.querySelector(selector)\n    if (element) { \n      observer.observe(element) \n    }\n  })\n}\n","let scrollToTop = document.getElementById(\"up\");\n\nwindow.onscroll = function () {\n  scroll();\n};\n\nfunction scroll() {\n  if (\n    document.body.scrollTop > 100 ||\n    document.documentElement.scrollTop > 100\n  ) {\n    scrollToTop.style.display = \"flex\";\n  } else {\n    scrollToTop.style.display = \"none\";\n  }\n}\n\n$(\"#up\").click(function () {\n  $(\"html, body\").animate({ scrollTop: 0 }, 1);\n  return false;\n});\n"],"names":["mobileMenu","openMenuBtn","closeMenuBtn","toggleMenu","isMenuOpen","IntersectionObserverCallback","entries","entry","observer","selector","element","scrollToTop","scroll"],"mappings":"usBAAC,IAAM,CACH,MAAMA,EAAa,SAAS,cAAc,oBAAoB,EACxDC,EAAc,SAAS,cAAc,eAAe,EACpDC,EAAe,SAAS,cAAc,gBAAgB,EAEtDC,EAAa,IAAM,CACrB,MAAMC,EACFH,EAAY,aAAa,eAAe,IAAM,QAAU,GAC5DA,EAAY,aAAa,gBAAiB,CAACG,CAAU,EACrDJ,EAAW,UAAU,OAAO,SAAS,CAM7C,EAEIC,EAAY,iBAAiB,QAASE,CAAU,EAChDD,EAAa,iBAAiB,QAASC,CAAU,EAGjD,OAAO,WAAW,oBAAoB,EAAE,iBAAiB,SAAU,GAAK,CAC/D,EAAE,UACPH,EAAW,UAAU,OAAO,SAAS,EACrCC,EAAY,aAAa,gBAAiB,EAAK,EAEvD,CAAK,CACL,GAAI,EC3BJ,MAAMI,EAAgCC,GAAY,CAChDA,EAAQ,QAAQC,GAAS,CACnBA,EAAM,eACRA,EAAM,OAAO,UAAU,IAAI,WAAW,EAEtCA,EAAM,OAAO,UAAU,OAAO,WAAW,CAE/C,CAAG,CACH,EAIMC,EAAW,IAAI,qBAAqBH,EAA8B,CACtE,UAAW,CAAC,EAAG,CACjB,CAAC,EAED,OAAO,OAAS,IAAM,CAEpB,CAAC,gBAAgB,EAAE,QAAQI,GAAY,CACrC,MAAMC,EAAU,SAAS,cAAcD,CAAQ,EAC3CC,GACFF,EAAS,QAAQE,CAAO,CAE9B,CAAG,CACH,ECxBA,IAAIC,EAAc,SAAS,eAAe,IAAI,EAE9C,OAAO,SAAW,UAAY,CAC5BC,GACF,EAEA,SAASA,GAAS,CAEd,SAAS,KAAK,UAAY,KAC1B,SAAS,gBAAgB,UAAY,IAErCD,EAAY,MAAM,QAAU,OAE5BA,EAAY,MAAM,QAAU,MAEhC,CAEA,EAAE,KAAK,EAAE,MAAM,UAAY,CACzB,SAAE,YAAY,EAAE,QAAQ,CAAE,UAAW,CAAC,EAAI,CAAC,EACpC,EACT,CAAC"}